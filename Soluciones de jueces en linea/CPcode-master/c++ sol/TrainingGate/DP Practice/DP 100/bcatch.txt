/*
  NAME: super_j6
  LANG: C++
  PROG: bcatch
*/

#include <iostream>
#include <cstdio>
#include <algorithm>
using namespace std;
#define endl '\n'

int dp[1000][31][2];

int main(){
	freopen("bcatch.in", "r", stdin);
	freopen("bcatch.out", "w", stdout);
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	
	int t, w;
	cin >> t >> w;
	
	for(int i = 0; i < t; i++){
		int x;
		cin >> x;
		x--;
		
		for(int j = 0; j <= w; j++){
			for(int k = 0; k < 2; k++){
				if(i > 0){
					dp[i][j][k] = dp[i - 1][j][k];
					if(j > 0) dp[i][j][k] = max(dp[i][j][k], dp[i - 1][j - 1][!k]);
				}
				
				dp[i][j][k] += (x == k);
			}
		}
	}
	
	cout << max(dp[t - 1][w - (w % 2 == 1)][0], dp[t - 1][w - (w % 2 == 0)][1]) << endl;

	return 0;
}