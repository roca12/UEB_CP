/*
  NAME: super_j6
  LANG: C++
  PROG: lexicon
*/

#include <iostream>
#include <cstdio>
#include <algorithm>
#include <string.h>
#include <vector>
using namespace std;
#define endl '\n'

int main(){
	freopen("lexicon.in", "r", stdin);
	freopen("lexicon.out", "w", stdout);
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	
	int w, l;
	string s;
	cin >> w >> l;
	cin >> s;

	vector<int> nx[26];
	for(int i = 0; i < l; i++){
		nx[s[i] - 'a'].push_back(i);
	}
	for(int i = 0; i < 26; i++) nx[i].push_back(l);
	
	string t[w];
	for(int i = 0; i < w; i++) cin >> t[i];
	
	int dp[l + 1];
	for(int i = 0; i <= l; i++) dp[i] = l;
	dp[0] = 0;
	
	for(int i = 0; i < l; i++){
		for(int j = 0; j < w; j++){
			int x = i - 1;
			for(int k = 0; k < t[j].size() && x < l; k++){
				x = *upper_bound(nx[t[j][k] - 'a'].begin(), nx[t[j][k] - 'a'].end(), x);
			}
			x++;
			if(x <= l) dp[x] = min(dp[x], dp[i] + x - i - (int)t[j].size());
		}
		dp[i + 1] = min(dp[i + 1], dp[i] + 1);
	}
	
	cout << dp[l] << endl;

	return 0;
}