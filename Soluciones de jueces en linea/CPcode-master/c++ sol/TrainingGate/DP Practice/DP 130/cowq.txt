/*
  NAME: super_j6
  LANG: C++
  PROG: cowq
*/

#include <iostream>
#include <cstdio>
#include <algorithm>
#include <string.h>
#include <iomanip>
using namespace std;
#define endl '\n'

const int maxn = 101;
int n, b, j;
bool f;
long long dp[maxn][maxn][maxn];

bool works(int y){
	return y < b && j <= y;
}

long long solve(int p, int x, int y){
	if(x < 0 || y < 0) return 0;
	if(works(y) && !p) return 0;
	if(dp[p][x][y] != -1) return dp[p][x][y];
	return dp[p][x][y] = solve(works(y) ? p - 1 : 0, x - 1, y) + solve(works(y) ? p + 1 : y == b ? 1 : 0, x + 1, y - 1);
}

int main(){
	freopen("cowq.in", "r", stdin);
	freopen("cowq.out", "w", stdout);
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout << setprecision(5) << fixed;
	
	cin >> n >> b >> j;
	
	b = n - b + 1;
	j = n - j + 1;
	if(b < j){
		swap(b, j);
		f = 1;
	}
	
	memset(dp, -1, sizeof(dp));
	dp[0][0][0] = 1;
	long double x = solve(0, 0, n);
	
	b = -1, j = -1;
	memset(dp, -1, sizeof(dp));
	dp[0][0][0] = 1;
	long double y = solve(0, 0, n);
	
	cout << ((f ? x : y - x) / y) << endl;
	return 0;
}