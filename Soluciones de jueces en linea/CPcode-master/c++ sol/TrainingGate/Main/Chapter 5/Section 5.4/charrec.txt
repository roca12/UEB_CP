/*
  NAME: super_j6
  LANG: C++
  PROG: charrec
*/

#include <iostream>
#include <fstream>
#include <algorithm>
#include <vector>
#include <string>
#include <stdio.h>
#include <string.h>
#include <cstdint>
using namespace std;

int n, f;
int font[540], charrec[1200];

int numbits[16] = {0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, 3, 4};
int bitset(int num){
	if(num == 0) return 0;
	return numbits[num & 15] + bitset(num >> 4);
}

int corrupt(int a, int b){
	return bitset(font[a] ^ charrec[b]);
}

pair<int, int> bestchar19(int index){
	int minc = 115, bestchar = '?';
	
	for(int i = 0; i < f / 20; i++){

		int c = 115;
		
		for(int s = 0; s < 20; s++){
			int test = 0;
			
			for(int j = 0; j < 20; j++){
				if(j == s) continue;
				if(j < s){
					test += corrupt(i * 20 + j, index + j); 
				}else{
					test += corrupt(i * 20 + j, index + j - 1);
				}
			}
			c = min(c, test);
		}
		
		if(c < minc){
			minc = c;
			if(i == 0) bestchar = ' ';
			else bestchar = i + 'a' - 1;
		}
	}
	
	return make_pair(minc, bestchar);
}

pair<int, int> bestchar20(int index){
	int minc = 121, bestchar = '?';
	
	for(int i = 0; i < f / 20; i++){
		int c = 0;
		
		for(int j = 0; j < 20; j++){
			c += corrupt(i * 20 + j, index + j);
		}
		
		if(c < minc){
			minc = c;
			if(i == 0) bestchar = ' ';
			else bestchar = i + 'a' - 1;
		}
	}
	
	return make_pair(minc, bestchar);
}

pair<int, int> bestchar21(int index){
	int minc = 127, bestchar = '?';
	
	for(int i = 0; i < f / 20; i++){

		int c = 127;
		
		for(int s = 0; s < 20; s++){
			int test = 0;
			
			for(int j = 0; j < 20; j++){
				if(j == s){
					test += min(corrupt(i * 20 + j, index + j), corrupt(i * 20 + j, index + j + 1));
				}else if(j < s){
					test += corrupt(i * 20 + j, index + j);
				}else{
					test += corrupt(i * 20 + j, index + j + 1);
				}
			}
			c = min(c, test);
		}
		
		if(c < minc){
			minc = c;
			if(i == 0) bestchar = ' ';
			else bestchar = i + 'a' - 1;
		}
	}
	
	return make_pair(minc, bestchar);
}

int main(){
	ifstream fontin ("font.in");
	ifstream fin ("charrec.in");
	ofstream fout ("charrec.out");
	
	fontin >> f;
	
	for(int i = 0; i < f; i++){
		string bin;
		fontin >> bin;
		font[i] = stoi(bin, nullptr, 2);
	}
	
	fin >> n;
	
	for(int i = 0; i < n; i++){
		string bin;
		fin >> bin;
		charrec[i] = stoi(bin, nullptr, 2);
	}
	
	int dp[n + 1], prev[n + 1], charat[n + 1];
	memset(dp, 1000000, sizeof(dp)), memset(prev, -1, sizeof(prev)), memset(charat, '?', sizeof(charat));
	dp[0] = 0;
	
	for(int i = 0; i <= n; i++){
		pair<int, int> cur;
		
		if(i + 19 <= n){
			cur = bestchar19(i);
			int test = dp[i] + cur.first;
			
			if(test < dp[i + 19]){
				
				dp[i + 19] = test;
				prev[i + 19] = i;
				charat[i + 19] = cur.second;
			}
		}else break;
		
		
		if(i + 20 <= n){
			cur = bestchar20(i);
			int test = dp[i] + cur.first;
			
			if(test <= dp[i + 20]){
				dp[i + 20] = test;
				prev[i + 20] = i;
				charat[i + 20] = cur.second;
			}
		}else continue;

		if(i + 21 <= n){
			cur = bestchar21(i);
			int test = dp[i] + cur.first;
			
			if(test <= dp[i + 21]){
				dp[i + 21] = test;
				prev[i + 21] = i;
				charat[i + 21] = cur.second;
			}
		}else continue;

	}
	
	string out;
	int index = n;
	
	while(index != 0){
		out += (char)charat[index];
		index = prev[index];
	}
	
	for(int i = out.size() - 1; i >= 0; i--){
		fout << out[i];
	}
	fout << endl;

	return 0;
}