/*
  NAME: super_j6
  LANG: C++
  PROG: twofive
*/

#include <iostream>
#include <cstdio>
#include <algorithm>
#include <string.h>
using namespace std;
#define endl '\n'

int dp[6][6][6][6][6], visited[6][6][6][6][6];
pair<int, int> pos[25];
bool used[25];
int run = 0;

// position is (i, j) and character is k;

int f(int a, int b, int c, int d, int e){
	if(5 < a || a < b || b < c || c < d || d < e) return 0;
	if(a == 5 && b == 5 && c == 5 && d == 5 && e == 5) return 1;
	
	if(visited[a][b][c][d][e] != run){
		
		dp[a][b][c][d][e] = 0;
		visited[a][b][c][d][e] = run;
		
		int k = a + b + c + d + e;
		
		if(pos[k].first != -1){
			if(pos[k].first == 0 && pos[k].second == a) dp[a][b][c][d][e] = f(a + 1, b, c, d, e);
			if(pos[k].first == 1 && pos[k].second == b) dp[a][b][c][d][e] = f(a, b + 1, c, d, e);
			if(pos[k].first == 2 && pos[k].second == c) dp[a][b][c][d][e] = f(a, b, c + 1, d, e);
			if(pos[k].first == 3 && pos[k].second == d) dp[a][b][c][d][e] = f(a, b, c, d + 1, e);
			if(pos[k].first == 4 && pos[k].second == e) dp[a][b][c][d][e] = f(a, b, c, d, e + 1);
		}else{
			dp[a][b][c][d][e] += f(a + 1, b, c, d, e);
			dp[a][b][c][d][e] += f(a, b + 1, c, d, e);
			dp[a][b][c][d][e] += f(a, b, c + 1, d, e);
			dp[a][b][c][d][e] += f(a, b, c, d + 1, e);
			dp[a][b][c][d][e] += f(a, b, c, d, e + 1);
		}
		
	}
	
	return dp[a][b][c][d][e];
}

string N(int n){
	n--;
	int cur = 0;
	string result;
	
	for(int k = 0; k < 25; k++) pos[k] = make_pair(-1, -1);
	
	for(int i = 0; i < 5; i++)
	for(int j = 0; j < 5; j++)
	for(int k = 0; k < 25; k++){
				
		if(pos[k].first != -1) continue;
		
		run++;
		pos[k] = make_pair(i, j);
		int add = f(0, 0, 0, 0, 0);
		
		if(cur + add > n){
			result += k + 'A';
			break;
		}
		
		cur += add;
		pos[k] = make_pair(-1, -1);
		
	}
	
	return result;
}

int W(string w){
	int result = 0;
	
	for(int k = 0; k < 25; k++) pos[k] = make_pair(-1, -1);
	
	for(int i = 0; i < 5; i++)
	for(int j = 0; j < 5; j++)
	for(int k = 0; k < 25; k++){
				
		if(pos[k].first != -1) continue;
		
		run++;
		pos[k] = make_pair(i, j);
		int add = f(0, 0, 0, 0, 0);
		
		if(k + 'A' == w[i * 5 + j]){
			break;
		}
		
		result += add;
		pos[k] = make_pair(-1, -1);
		
	}
	
	return result + 1;
}

int main(){
	freopen("twofive.in", "r", stdin);
	freopen("twofive.out", "w", stdout);
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	
	char c;
	cin >> c;
	
	if(c == 'N'){
		int n;
		cin >> n;
		cout << N(n) << endl;;
	}else{
		string w;
		cin >> w;
		cout << W(w) << endl;
	}
	
	return 0;
}