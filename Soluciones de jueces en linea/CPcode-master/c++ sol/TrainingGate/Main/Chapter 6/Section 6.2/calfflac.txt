/*
  NAME: super_j6
  LANG: C++
  PROG: calfflac
*/

#include <iostream>
#include <cstdio>
#include <algorithm>
#include <string>
#include <vector>
using namespace std;
#define endl '\n'

int main(){
	freopen("calfflac.in", "r", stdin);
	freopen("calfflac.out", "w", stdout);
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	
	string sent, temp;
	
	while(getline(cin, temp)){
		sent += temp;
		sent += endl;
	}
	
	string s;
	vector<int> ind;
	
	for(int i = 0; i < sent.size(); i++){
		if((tolower(sent[i]) >= 'a' && tolower(sent[i]) <= 'z')){
			s += tolower(sent[i]);
			ind.push_back(i);
		}
	}
	
	int d1[s.size()], d2[s.size()];
	
	for(int i = 0, l = 0, r = -1; i < s.size(); i++){
		int k = (i > r) ? 1 : min(d1[l + r - i], r - i + 1);
		while(i - k >= 0 && i + k < s.size() && s[i - k] == s[i + k]){
			k++;
		}
		d1[i] = k--;
		if(i + k > r){
			l = i - k;
			r = i + k;
		}
	}
	
	
	for(int i = 0, l = 0, r = -1; i < s.size(); i++){
		int k = (i > r) ? 0 : min(d2[l + r - i + 1], r - i + 1);
		while(0 <= i - k - 1 && i + k < s.size() && s[i - k - 1] == s[i + k]){
			k++;
		}
		d2[i] = k--;
		if(i + k > r){
			l = i - k - 1;
			r = i + k;
		}
	}
	
	int maxv = 0, ml = 0, mr = 0;
	
	for(int i = 0; i < s.size(); i++){
		int l = ind[i - d1[i] + 1], r = ind[i + d1[i] - 1];
		if(2 * d1[i] - 1 > maxv) maxv = 2 * d1[i] - 1, ml = l, mr = r;
		
		l = ind[i - d2[i]], r = ind[i + d2[i] - 1];
		if(2 * d2[i] > maxv) maxv = 2 * d2[i], ml = l, mr = r;
	}
	
	cout << maxv << endl;
	
	cout << sent.substr(ml, mr - ml + 1) << endl;

	return 0;
}