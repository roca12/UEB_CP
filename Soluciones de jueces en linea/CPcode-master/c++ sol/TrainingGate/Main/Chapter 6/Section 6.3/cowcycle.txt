/*
  NAME: super_j6
  LANG: C++
  PROG: cowcycle
*/

#include <iostream>
#include <cstdio>
#include <algorithm>
#include <vector>
#include <string.h>
using namespace std;
#define endl '\n'

int f, r;
int f1, f2, r1, r2;
int F[5], R[10];
double minv = 10000;

void solve(vector<int> front, vector<int> rear){
	double ratio[f * r];
	for(int i = 0; i < f * r; i++) ratio[i] = 1.0 * front[i % f] / rear[i / f];
	sort(ratio, ratio + f * r);
	
	double ans = 0;
	double mean = (ratio[f * r - 1] - ratio[0]) / (f * r - 1);
	
	for(int i = 0; i < f * r - 1; i++){
		ans += (ratio[i + 1] - ratio[i] - mean) * (ratio[i + 1] - ratio[i] - mean);
	}
	
	if(ans < minv){
		minv = ans;
		for(int i = 0; i < f; i++) F[i] = front[i];
		for(int i = 0; i < r; i++) R[i] = rear[i];
	}
}

int main(){
	freopen("cowcycle.in", "r", stdin);
	freopen("cowcycle.out", "w", stdout);
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	
	cin >> f >> r;
	cin >> f1 >> f2 >> r1 >> r2;
	
	string ff(f, '1'); ff.resize(f2 - f1 + 1, '0');
	string rr(r, '1'); rr.resize(r2 - r1 + 1, '0');
	
	vector<vector<int>> rear;
	
	do{
		vector<int> temp;
		for(int i = 0; i < r2 - r1 + 1; i++) if(rr[i] == '1') temp.push_back(i + r1);
		rear.push_back(temp);
		
	}while(prev_permutation(rr.begin(), rr.end()));
	
	do{
		vector<int> front;
		for(int i = 0; i < f2 - f1 + 1; i++) if(ff[i] == '1') front.push_back(i + f1);
		
		for(int i = 0; i < rear.size(); i++){
			if(front[f - 1] * rear[i][r - 1] >= 3 * front[0] * rear[i][0]){
				solve(front, rear[i]);
			}
		}
		
	}while(prev_permutation(ff.begin(), ff.end()));
	
	
	cout << F[0];
	for(int i = 1; i < f; i++) cout << " " << F[i];
	cout << endl;
	
	cout << R[0];
	for(int i = 1; i < r; i++) cout << " " << R[i];
	cout << endl;

	return 0;
}