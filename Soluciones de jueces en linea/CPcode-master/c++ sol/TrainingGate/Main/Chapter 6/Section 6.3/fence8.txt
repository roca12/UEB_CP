/*
  NAME: super_j6
  LANG: C++
  PROG: fence8
*/

#include <iostream>
#include <cstdio>
#include <algorithm>
#include <random>
using namespace std;
#define endl '\n'

int n, r;
int bd[50], rl[1023];
int sum[1023];
int sumb = 0;

bool recur(int bi, int ri){
	if(ri < 0) return true;
	
	int s = 0;
	for(int i = 0; i < n; i++){
		if(bd[i] >= rl[0]){
			s += bd[i];
		}
	}
	if(s < sum[ri]) return false;
	
	int st = (ri < r - 1 && rl[ri] == rl[ri + 1] ? bi : 0);
	bool temp;

	for(int i = st; i < n; i++){
		if(bd[i] == rl[ri]){
			bd[i] -= rl[ri];
			temp = recur(i, ri - 1);
			bd[i] += rl[ri];

			return temp;
		}
	}
	
	for(int i = st; i < n; i++){
		if(bd[i] >= rl[ri]){
			bd[i] -= rl[ri];
			temp = recur(i, ri - 1);
			bd[i] += rl[ri];
			
			if(temp) return true;
		}
	}
	
	return false;
}

int main(){
	freopen("fence8.in", "r", stdin);
	freopen("fence8.out", "w", stdout);
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	
	cin >> n;
	
	for(int i = 0; i < n; i++){
		cin >> bd[i];
	}
	
	cin >> r;
	
	for(int i = 0; i < r; i++){
		cin >> rl[i];
	}
	
	sort(bd, bd + n, greater<int>());
	sort(rl, rl + r);
	
	while(n > 0 && bd[n - 1] < rl[0]) n--;
	
	if(n == 0){
		cout << 0 << endl;
		return 0;
	}
	
	reverse(bd, bd + n);
	for(int i = 0; i < n; i++) sumb += bd[i];
	
	while(r > 0 && rl[r - 1] > bd[n - 1]) r--;
	
	for(int i = 0; i < r; i++){
		sum[i] = rl[i];
		if(i > 0) sum[i] += sum[i - 1];
		
		if(sum[i] > sumb){
			r = i;
			break;
		}
	}
	
	if(r == 0){
		cout << 0 << endl;
		return 0;
	}
	
	int lo = 0, hi = r;
	while(hi - lo > 1){
		int mid = lo + (hi - lo) / 2;
		
		if(recur(0, mid)) lo = mid;
		else hi = mid;
	}
	
	cout << hi << endl;

	return 0;
}