/*
  NAME: super_j6
  LANG: C++
  PROG: fence3
*/

#include <iostream>
#include <cstdio>
#include <algorithm>
#include <iomanip>
#include <math.h>
using namespace std;
#define endl '\n'

struct pt{
	double x, y;
};

int n;
pair<pt, pt> f[150];

int dx[4] = {1, 0, -1, 0};
int dy[4] = {0, 1, 0, -1};

double solve(pt p){
	double ret = 0;
	
	for(int i = 0; i < n; i++){
		double d = 0;
		
		if((p.x < f[i].first.x && p.x < f[i].second.x) || (p.x > f[i].first.x && p.x > f[i].second.x)){
			d += min(pow(p.x - f[i].first.x, 2), pow(p.x - f[i].second.x, 2));
		}
		
		if((p.y < f[i].first.y && p.y < f[i].second.y) || (p.y > f[i].first.y && p.y > f[i].second.y)){
			d += min(pow(p.y - f[i].first.y, 2), pow(p.y - f[i].second.y, 2));
		}
		
		ret += sqrt(d);
	}
	
	return ret;
}

int main(){
	freopen("fence3.in", "r", stdin);
	freopen("fence3.out", "w", stdout);
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout << setprecision(1) << fixed;
	
	cin >> n;
	
	for(int i = 0; i < n; i++){
		cin >> f[i].first.x >> f[i].first.y >> f[i].second.x >> f[i].second.y;
	}
	
	double ans = 1000000;
	pt best = f[0].first;
	
	for(double t = 100; t > 0.01; t *= 0.99){
		for(int i = 0; i < 4; i++){
			best.x += dx[i] * t, best.y += dy[i] * t;
			double cur = solve(best);
			
			if(cur < ans){
				ans = cur;
				break;
			}
			
			best.x -= dx[i] * t, best.y  -= dy[i] * t;
		}
	}
	
	cout << best.x << " " << best.y << " " << ans << endl;

	return 0;
}