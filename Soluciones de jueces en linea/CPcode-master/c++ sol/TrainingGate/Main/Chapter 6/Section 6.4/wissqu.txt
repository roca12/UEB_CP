/*
  NAME: super_j6
  LANG: C++
  PROG: wissqu
*/

#include <iostream>
#include <cstdio>
#include <algorithm>
#include <vector>
using namespace std;
#define endl '\n'

char grid[4][4];
vector<pair<char, pair<int, int>>> sol;

int d = 'a' - 'A';
int dx[9] = {0, 1, 1, 0, -1, -1, -1, 0, 1};
int dy[9] = {0, 0, -1, -1, -1, 0, 1, 1, 1};
int amt[5] = {3, 3, 3, 4, 3};
int cnt[5];

int recur(bool f){
	int ret = 0;
	bool any = 0;
	
	for(int k = 'a'; k <= 'e'; k++){
		if((k != 'd' && cnt[3] == 0) || cnt[k - 'a'] == amt[k - 'a']) continue;
		any = 1;
		cnt[k - 'a']++;
		for(int i = 0; i < 4; i++){
			for(int j = 0; j < 4; j++){
				if(grid[i][j] >= 'a') continue;
				int m = grid[i][j];
			
				bool works = 1;
				
				for(int l = 0; l < 9; l++){
					int x = i + dx[l], y = j + dy[l];
					if(x < 0 || x >= 4 || y < 0 || y >= 4) continue;
					if(grid[x][y] == k - d || grid[x][y] == k){
						works = 0;
						break;
					}
				}
				
				if(!works) continue;
				
				grid[i][j] = k;
				int c = recur(f);
				grid[i][j] = m;
				
				if(c > 0 && f){
					sol.push_back(make_pair(k - d, make_pair(i + 1, j + 1)));
					f = 0;
				}
				
				ret += c;
				
			}
		}
		cnt[k - 'a']--;
	}
	
	if(!any) return 1;
	return ret;
}

int main(){
	freopen("wissqu.in", "r", stdin);
	freopen("wissqu.out", "w", stdout);
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	
	for(int i = 0; i < 4; i++) cin >> grid[i];
	
	int ans = recur(1);
	reverse(sol.begin(), sol.end());
	
	for(int i = 0; i < sol.size(); i++){
		cout << sol[i].first << " " << sol[i].second.first << " " << sol[i].second.second << endl; 
	}

	cout << ans << endl;

	return 0;
}