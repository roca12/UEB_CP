/*
  NAME: super_j6
  LANG: C++
  PROG: latin
*/

#include <iostream>
#include <cstdio>
#include <algorithm>
#include <string.h>
#include <vector>
#include <unordered_map>
using namespace std;
#define endl '\n'

int n;
bool cur[6][7];
string f[5];
vector<string> s[5];
unordered_map<long, long> m, m2;

const long hm = 1000000007;
const long ha = 100000007;
const long hb = 101;

long hsh(){
	long ret = 0;
	for(int i = 0; i < n - 1; i++)
	for(int j = 0; j < n; j++){
		ret = (ret * ha + cur[i][j] + hb) % hm;	
	}
	
	return ret;
}

long recur(int i){
	if(i == n - 2) return 1;
	
	long c = hsh();
	if(m[c] > 0) return m[c];
	
	long ret = 0;
	
	for(string a : s[i]){
		bool works = 1;
		for(int j = 0; j < i; j++){
			for(int k = 0; k < n - 1; k++){
				if(a[k] == f[j][k]){
					works = 0;
					break;
				}
			}
			if(!works) break;
		}
		if(!works) continue;
		
		for(int k = 0; k < n - 1; k++) cur[k][a[k] - '1'] = 1;
		
		f[i] = a;
		
		if(i == 0){
			int mr = 0;
			bool used[n];
			for(int j = 0; j < n; j++) used[j] = 0;
			
			for(int j = 0; j < n; j++){
				int r = 0;
				for(int l = j; !used[l]; r++){
					used[l] = 1;
					if(l == 0) l = 1;
					else l = a[l - 1] - '1';
				}
				mr = max(mr, r);
			}
			
			if(m2[mr] == 0) m2[mr] = recur(i + 1);
			
			ret += m2[mr] * (a[0]  == '3' ? n - 2 : 1);
		}else{
			ret += recur(i + 1);
		}
		
		for(int k = 0; k < n - 1; k++) cur[k][a[k] - '1'] = 0;
	}
	
	m[c] = ret;
	return ret;
}

int main(){
	freopen("latin.in", "r", stdin);
	freopen("latin.out", "w", stdout);
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	
	cin >> n;

	string a, c;
	for(int i = 2; i <= n; i++) a += (char)(i + '0');
	c = a;
	
	for(int i = 0; i < n - 2; i++){
		a.erase(i, 1);
		a.insert(0, "1");
		while(next_permutation(a.begin(), a.end())){
			if(i == 0 && a[0] > '3') break;
			
			bool works = 1;
			for(int j = 0; j < n - 1; j++){
				if(a[j] == c[j]){
					works = 0;
					break;
				}
			}
			
			if(works){
				s[i].push_back(a);
			} 
		}
		a = c;
	}
	
	long long ans = recur(0);
	for(int i = 2; i < n; i++) ans *= i;
	
	cout << ans << endl;

	return 0;
}