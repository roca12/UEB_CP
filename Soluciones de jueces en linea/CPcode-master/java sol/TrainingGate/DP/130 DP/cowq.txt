/*
  NAME: super_j6
  LANG: JAVA
  PROG: cowq
*/

import java.io.*;
import java.util.*;
import java.lang.*;
import java.math.*;

class cowq{
	static int maxn = 101;
	static BigInteger z = BigInteger.valueOf(0), w = BigInteger.valueOf(-1), v = BigInteger.valueOf(1); 
	static int n, b, j;
	static boolean fl;
	static BigInteger dp[][][] = new BigInteger[maxn][maxn][maxn];
	
	static boolean works(int y){
		return y < b && j <= y;
	}
	
	static BigInteger solve(int p, int x, int y){
		if(x < 0 || y < 0) return z;
		if(works(y) && p == 0) return z;
		if(dp[p][x][y] != w) return dp[p][x][y];
		return dp[p][x][y] = solve(works(y) ? p - 1 : 0, x - 1, y).add(solve(works(y) ? p + 1 : y == b ? 1 : 0, x + 1, y - 1));	
	}
	
	static void reset(){
		for(int i = 0; i <= n; i++)
		for(int j = 0; j <= n; j++)
		for(int k = 0; k <= n; k++) dp[i][j][k] = w;
		dp[0][0][0] = v;
	}

    public static void main(String[] args) throws IOException{
        BufferedReader f = new BufferedReader(new FileReader("cowq.in"));
        PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("cowq.out")));
        //BufferedReader f = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(f.readLine());
		
		n = Integer.parseInt(st.nextToken()); b = Integer.parseInt(st.nextToken()); j = Integer.parseInt(st.nextToken());
        
        	b = n - b + 1;
		j = n - j + 1;
		if(b < j){
			b = j + b;
			j = b - j;
			b = b - j;
			fl = true;
		}
		
		reset();
		BigDecimal x = new BigDecimal(solve(0, 0, n));
		
		b = -1; j = -1;
		reset();
		BigDecimal y = new BigDecimal(solve(0, 0, n));
		
		out.println((fl ? x : y.subtract(x)).divide(y, 5, RoundingMode.HALF_UP));
        
        out.close();
    }

}