/*
NAME: super_j6
LANG: JAVA
PROG: agrinet
*/

import java.lang.*;
import java.io.*;
import java.util.*;

class agrinet{

  public static void main(String [] args) throws IOException{
    BufferedReader f = new BufferedReader(new FileReader("agrinet.in"));
    PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("agrinet.out")));

    int num = Integer.parseInt(f.readLine());
    int[][] array = new int[num][num];

    StringTokenizer st = new StringTokenizer(f.readLine());

    for(int i = 0; i < num; i++){
      for(int j = 0; j < array.length; j++){
        array[i][j] = Integer.MAX_VALUE;

        if(!st.hasMoreTokens()){
          st = new StringTokenizer(f.readLine());
        }

        array[i][j] = Integer.parseInt(st.nextToken());
      }
    }

    int[] distance = new int[num];
    boolean[] intree = new boolean[num];
    int[] source = new int[num];
    int treecost = 0;
    
    Arrays.fill(distance, Integer.MAX_VALUE);
    Arrays.fill(intree, false);

    intree[0] = true;

    int last = 0; 

    for(int i = 0; i < num; i++){
      distance[i] = array[0][i];
      source[i] = 0;
    }

    for(int i = 1; i < num; i++){
      int lowest = Integer.MAX_VALUE;
      int newLast = num;
      for(int j = 0; j < num; j++){
        for(int k = 0; k < num; k++){
          if(intree[j] && !intree[k] && array[j][k] < lowest){
            lowest = array[j][k];
            newLast = k;
          }
        }
      }

      treecost += distance[newLast];
      intree[newLast] = true;

      for(int j = 0; j < num; j++){
        if(distance[j] > array[newLast][j]){
          distance[j] = array[newLast][j];
          source[j] = newLast;
        }
      }
    }

    out.println(treecost);

    System.out.println(Arrays.toString(distance));
    System.out.println(Arrays.toString(source));
    
    out.close();
  }

}
