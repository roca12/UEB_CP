/*
NAME: super_j6
LANG: JAVA
PROG: fence9
*/

import java.io.*;
import java.util.*;
import java.lang.*;

class fence9{

  public static void main(String [] args) throws IOException{
    BufferedReader f = new BufferedReader(new FileReader("fence9.in"));
    PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("fence9.out")));
    StringTokenizer st = new StringTokenizer(f.readLine());

    int n = Integer.parseInt(st.nextToken()), m = Integer.parseInt(st.nextToken()), p = Integer.parseInt(st.nextToken());

    int line = linepoints(0, 0, n, m) + linepoints(n, m, p, 0) + linepoints(p, 0, 0, 0) - 3;

    System.out.println(line);

    int area = Math.abs((p - 0) * (m - 0)) / 2;

    System.out.println(area);

    out.println((area + 1 - line/2));

    out.close();
  }

  public static int linepoints(int x1, int y1, int x2, int y2){

    if(x2 == x1){
      System.out.println("vertical");
      System.out.println(Math.abs(y2 - y1) + 1);
      System.out.println();
      return Math.abs(y2 - y1) + 1;
    }


    int tester = Math.abs(x2 - x1) / gcd(Math.abs(x2 - x1), Math.abs(y2 - y1));
    if(y2 - y1 == 0) tester = 1;
    System.out.println(tester);
    int output = 0;

    for(int i = Math.min(x1, x2); i <= Math.max(x1, x2); i++){
      if((i - x1) % tester == 0) output += 1;
    }

    System.out.println(output);
    System.out.println();

    return output;
  }
  
  public static int gcd(int n, int m){
    if(n == 0 || m == 0) return 1; 

    for(int i = Math.min(n, m); i > 0; i--){
      if(n % i == 0 && m % i == 0) return i;
    }

    return 0;
  }
}