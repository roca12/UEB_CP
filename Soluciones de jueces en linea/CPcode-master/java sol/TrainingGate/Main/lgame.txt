/*
NAME: super_j6
LANG: JAVA
PROG: lgame
*/

import java.lang.*;
import java.util.*;
import java.io.*;

class lgame{
  public static int[] taken;
  public static int[] values = {2,5,4,4,1,6,5,5,1,7,6,3,5,2,3,5,7,2,1,2,4,6,6,7,5,7};
  public static String[] valid;
  public static ArrayList<String> sol;

  public static void main (String [] args) throws IOException{
    BufferedReader f = new BufferedReader(new FileReader("lgame.in"));
    BufferedReader d = new BufferedReader(new FileReader("lgame.dict"));
    PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("lgame.out")));

    String[] dict = new String[40000];
    valid = new String[40000];
    taken = new int[26];

    String input = f.readLine();
    int max = 0, dex = 0;

    while(d.ready()){

      dict[dex] = d.readLine();
      dex++;
    }

    for(int i = 0; i < input.length(); i++) taken[input.charAt(i) - 'a']++;

    dex = 0;
    for(int i = 0; i < dict.length; i++){
      char[] array = dict[i].toCharArray();
      if(array[0] == '.') break;
      int[] temp = new int[26];

      for(int j = 0; j < array.length; j++){ 

        temp[array[j] - 'a']++;

        if(temp[array[j] - 'a'] > taken[array[j] - 'a'])break;
        
        if(j == array.length - 1){
          valid[dex] = dict[i];
          dex++;
        }
      }
    }

    max = find_pairs(dex);

    out.println(max);
    String[] wow = sol.toArray(new String[sol.size()]);
    Arrays.sort(wow);

    for(int i = 0; i < wow.length; i++){
      out.println(wow[i]);
    }

    out.close();
  }

  public static int find_pairs(int N){
    int max = 0;

    for(int i = 0; i < N; i++){
      int temp = value(valid[i]);

      if(temp > max){
        max = temp;
        sol = new ArrayList<>();
        sol.add(valid[i]);
      }else if(temp == max) sol.add(valid[i]);

      for(int j = i + 1; j < N; j++){
        temp = val_pair(valid[i], valid[j]);

        if(temp > max){
          max = temp;
          sol = new ArrayList<>();
          sol.add(valid[i] + " " + valid[j]);
        }else if(temp == max) sol.add(valid[i] + " " + valid[j]);

      }
    }

    return max;
  }

  public static int value(String str){
    int output = 0;
    char[] array = str.toCharArray();

    for(int i = 0; i < array.length; i++){
      output += values[array[i] - 'a'];
    }

    return output;
  }

  public static int val_pair(String a, String b){
    int[] occ = new int[26];
    int output = 0;

    for(int i = 0; i < a.length(); i++){
      int hi = a.charAt(i) - 'a';
      occ[hi]++;
      if(occ[hi] > taken[hi]) return 0;
      output += values[hi];
    }

    for(int i = 0; i < b.length(); i++){
      int hi = b.charAt(i) - 'a';
      occ[hi]++;
      if(occ[hi] > taken[hi]) return 0;
      output += values[hi];
    }

    return output;
  }

}