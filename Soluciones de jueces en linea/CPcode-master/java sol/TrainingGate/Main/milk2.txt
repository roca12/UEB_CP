/*
ID: super_j6
LANG: JAVA
PROG: transform
*/
import java.io.*;
import java.util.*;

class transform {


  public static String[][] rotate(String[][] thing){
    int num = thing.length;
    String[][] output = new String[num][num];

    for(int i = 0; i < num; i++){
      for(int j = 0; j< num; j++){
        output[num-1-j][i] = thing[i][j];
      }
    }

    return output;
  }

  public static String[][] reflect(String[][] thing){
    int num = thing.length;
    String[][] output = new String[num][num];

    for(int i = 0; i < num; i++){
      for(int j = 0; j< num; j++){
        output[num-1-i][j] = thing[i][j];
      }
    }

    return output;
  }


  public static void main (String [] args) throws IOException {
    Scanner sc = new Scanner(new File("transform.in"));
    PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("transform.out")));
    
    int n = sc.nextLine();
    String[][] old = new String[n][n], new = new String[n][n];

    for(int i = 0; i < n; i++){
      char[] array = sc.nextLine();
      for(int j = 0; j< n; j++){
        old[i][j] = Character.toString(array[j]);
      }
    }
    
    for(int i = 0; i < n; i++){
      char[] array = sc.nextLine();
      for(int j = 0; j< n; j++){
        new[i][j] = Character.toString(array[j]);
      }
    }

    
    if(Array.deepEquals(old, new)){
      out.println(6);
    }else{
      for(int i = 1; i < 5; i++){
        old = rotate(old);
        if(Array.deepEquals(old, new)){
          out.println(i);
          break;
        }
      }

      if(!Array.deepEquals(old, new)){
        old = reflect(old);
        if(Array.deepEquals(old, new)){
          out.println(4);
        }else{
          for(int i = 1; i < 5; i++){
            old = rotate(old);
            if(Array.deepEquals(old, new)){
              out.println(5);
              break;
            }
          }

          if(!Array.deepEquals(old, new)) out.println(7);
        }
      }
    }

    out.close();
  } 
  
}