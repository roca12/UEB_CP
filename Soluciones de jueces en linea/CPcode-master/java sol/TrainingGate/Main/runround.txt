/*
NAME: super_j6
LANG: JAVA
PROG: runround
*/

import java.util.*;
import java.io.*;
import java.lang.*;

class runround{

  public static void main(String [] args) throws IOException{
    BufferedReader f = new BufferedReader(new FileReader("runround.in"));
    PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("runround.out")));

    int input = Integer.parseInt(f.readLine()) + 1;

    for(int i = (int)(Math.log(input)/Math.log(10)); i >= 0; i--){
      int length = (int)(Math.log(input)/Math.log(10)) + 1;
      int placement = (int)(Math.log(input)/Math.log(10)) - i;
      int digit = ((input / (int)Math.pow(10, i)) % 10);
      int test = (digit + placement) % length;
      boolean[] previous = new boolean[length];
      boolean[] previousdigit = new boolean[10];

      for(int j = length - 1; j > i; j--){
        int prevplacement = (int)(Math.log(input)/Math.log(10)) - j;
        int prevdigit = ((input / (int)Math.pow(10, j)) % 10);
        int prevtest = (prevdigit + prevplacement) % length;
        previous[prevtest] = true;
        previousdigit[prevdigit] = true;
      }

      if(test == placement || digit == 0 || previous[test] || previousdigit[digit]){
        input += Math.pow(10, i);
        if(i != 0) input -= input % (int)Math.pow(10, i) - input % (int)Math.pow(10, i - 1) - Math.pow(10, i - 1);
  
        System.out.println(input);

        i = (int)(Math.log(input)/Math.log(10)) + 1;
      }

      if(i == 0){
        int[] digval = new int[length];

        for(int j = length - 1; j >= 0; j--){
          int finalplacement = (int)(Math.log(input)/Math.log(10)) - j;
          int finaldigit = ((input / (int)Math.pow(10, j)) % 10);
          int finaltest = (finaldigit + finalplacement) % length;
          digval[finalplacement] = finaltest;
        }

        int current = digval[0];

        for(int j = length - 2; j > 0; j--){
          current = digval[current];
          if(current == 0){
            input += 1;
            i = (int)(Math.log(input)/Math.log(10)) + 1;
          }
        }
         
      }
      
    }

    out.println(input);    

    out.close();
  }

}