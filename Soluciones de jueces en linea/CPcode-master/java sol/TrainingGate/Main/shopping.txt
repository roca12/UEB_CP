/*
NAME: super_j6
LANG: JAVA
PROG: shopping
*/

import java.util.*;
import java.lang.*;
import java.io.*;

class shopping{

  public static void main(String [] args) throws IOException{
    BufferedReader f = new BufferedReader(new FileReader("shopping.in"));
    PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("shopping.out")));
    StringTokenizer st;

    int[][][][][] cost= new int[6][6][6][6][6];

    for(int a = 0; a < 6; a++){
      for(int b = 0; b < 6; b++){
        for(int c = 0; c < 6; c++){
          for(int d = 0; d < 6; d++){
            for(int e = 0; e < 6; e++){
              cost[a][b][c][d][e] = 25000;
            }
          }
        }
      }
    }

    cost[0][0][0][0][0] = 0;

    int thingy = 0;
    HashMap<Integer, Integer> map = new HashMap<>();

    int dealnum = Integer.parseInt(f.readLine());

    for(int i = 0; i < dealnum; i++){
      st = new StringTokenizer(f.readLine());

      int amount = Integer.parseInt(st.nextToken());
      int[] curd = new int[5];

      for(int j = 0; j < amount; j++){
        int c = Integer.parseInt(st.nextToken());
        int k = Integer.parseInt(st.nextToken());

        if(!map.containsKey(c)){
          map.put(c, thingy);
          thingy += 1;
        }

        curd[map.get(c)] = k;
      }

      int reduce = Integer.parseInt(st.nextToken());

      for(int a = 0; a < 6; a++){
        for(int b = 0; b < 6; b++){
          for(int c = 0; c < 6; c++){
            for(int d = 0; d < 6; d++){
              for(int e = 0; e < 6; e++){
                int cord0 = a - curd[0];
                int cord1 = b - curd[1];
                int cord2 = c - curd[2];
                int cord3 = d - curd[3];
                int cord4 = e - curd[4];

                if(cord0 >= 0 && cord1 >= 0 && cord2 >= 0 && cord3 >= 0 && cord4 >= 0) cost[a][b][c][d][e] = Math.min(cost[a][b][c][d][e], cost[cord0][cord1][cord2][cord3][cord4] + reduce);
                          
              }
            }
          }
        }
      }
    }
  

    int getnum = Integer.parseInt(f.readLine());
    int[][] tracker = new int[5][2];

    for(int i = 0; i < getnum; i++){
      st = new StringTokenizer(f.readLine());

      int index = Integer.parseInt(st.nextToken());

      if(!map.containsKey(index)){
        map.put(index, thingy);
        thingy += 1;
      } 

      System.out.println(index + " " + map.get(index));

      tracker[map.get(index)][0] = Integer.parseInt(st.nextToken());
      tracker[map.get(index)][1] = Integer.parseInt(st.nextToken());
    }

    for(int a = 0; a < 6; a++){
      for(int b = 0; b < 6; b++){
        for(int c = 0; c < 6; c++){
          for(int d = 0; d < 6; d++){
            for(int e = 0; e < 6; e++){
              int oops = 25000;

              oops = Math.min(oops, cost[a][b][c][d][e]);

              if(a - 1 >= 0) oops = Math.min(oops, cost[a - 1][b][c][d][e] + tracker[0][1]);
              if(b - 1 >= 0) oops = Math.min(oops, cost[a][b - 1][c][d][e] + tracker[1][1]);
              if(c - 1 >= 0) oops = Math.min(oops, cost[a][b][c - 1][d][e] + tracker[2][1]);
              if(d - 1 >= 0) oops = Math.min(oops, cost[a][b][c][d - 1][e] + tracker[3][1]);
              if(e - 1 >= 0) oops = Math.min(oops, cost[a][b][c][d][e - 1] + tracker[4][1]);

              cost[a][b][c][d][e] = oops;

              //System.out.println(a + " " + b + " " + c + " " + d + " " + e + " -> " + oops);
            }
          }
        }
      }
    }

    out.println(cost[tracker[0][0]][tracker[1][0]][tracker[2][0]][tracker[3][0]][tracker[4][0]]);

    out.close();

  } 

}