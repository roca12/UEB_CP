/*
NAME: super_j6
LANG: JAVA
PROG: subset
*/

import java.io.*;
import java.lang.*;
import java.util.*;

class subset{
public static ArrayList<int[]> partitions = new ArrayList<>();

  public static void main(String [] args) throws IOException{
    BufferedReader f = new BufferedReader(new FileReader("subset.in"));
    PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("subset.out")));

    int input = Integer.parseInt(f.readLine());

    if(input % 4 == 1 || input % 4 == 2){
      out.println(0);
    }else{
      int n = input * (input + 1) / 4;
      int total = 0;
      partitionMaker(input);

      for(int i = 0; i < partitions.size(); i++){
        int[] currentPar = partitions.get(i);
        int currentSum = 0;
        
        for(int j = 0; j < currentPar.length; j++){
          currentSum += currentPar[j];
        }

        System.out.println(currentSum + " " + Arrays.toString(currentPar));

        if(currentSum == n) total += 1;
      }

      out.println(total);
    }

    //out.println("A");

    out.close();
  }

  public static void partitionMaker(int n){
    for(int i = 1; i <= 1; i++){
      int[] newby = new int[1];
      newby[0] = i;
      partitionMaker(newby, n);
    }
  }

  private static void partitionMaker(int[] array, int n){
    partitions.add(array);

    for(int i = array[array.length - 1] + 1; i <= n; i++){
      int[] newArray = new int[array.length + 1];

      for(int j = 0; j < array.length; j++){
        newArray[j] = array[j];
      }

      newArray[array.length] = i;

      partitionMaker(newArray, n);
    }
  }

}