/*
NAME: super_j6
LANG: JAVA
PROG: zerosum
*/

import java.util.*;
import java.io.*;
import java.lang.*;

class zerosum{
  public static ArrayList<Integer[]> solutions = new ArrayList<>();
  public static int[] mainArray;

  public static void main(String [] args) throws IOException{
    BufferedReader f = new BufferedReader(new FileReader("zerosum.in"));
    PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("zerosum.out")));

    int input = Integer.parseInt(f.readLine());
    Integer[] why = new Integer[0];
    mainArray = new int[input];

    for(int i = 0 ; i < input ; i++){
      mainArray[i] = i + 1;
    }

    makeStuff(input, why);

    for(int i = 0; i < solutions.size(); i++){
      Integer[] output = solutions.get(i);

      for(int j = 0; j < output.length; j++){
        out.print(mainArray[j]);

        if(output[j] == 0){
          out.print(" ");
        }else if(output[j] == 1){
          out.print("+");
        }else{
          out.print("-");
        }
      }

      out.print(mainArray[mainArray.length - 1]);
      out.println();
    }

    out.close();
  }

  public static void makeStuff(int val, Integer[] array){
    if(array.length < val - 1){
      Integer[] newArray1 = new Integer[array.length + 1];
      Integer[] newArray2 = new Integer[array.length + 1];
      Integer[] newArray3 = new Integer[array.length + 1];
      
      System.arraycopy(array, 0, newArray1, 0, array.length);
      System.arraycopy(array, 0, newArray2, 0, array.length);
      System.arraycopy(array, 0, newArray3, 0, array.length);

      newArray1[array.length] = 0;
      newArray2[array.length] = 1;
      newArray3[array.length] = 2;

      makeStuff(val, newArray1);
      makeStuff(val, newArray2);
      makeStuff(val, newArray3);
    }else{
      int sum = 1;
      int currentCombine = 0;
      int lastOp = 3;
      for(int i = 0; i < array.length; i++){
        if(array[i] == 0){
          if(lastOp == 3){
            sum *= 10;
            sum += mainArray[i + 1];
          }else{
            currentCombine *= 10;
            currentCombine += mainArray[i + 1];
          }
        }else if(array[i] == 1){
          if(lastOp == 1){
            sum += currentCombine;
            currentCombine = 0;
          }else{
            sum -= currentCombine;
            currentCombine = 0;
          }

          lastOp = 1;
          currentCombine = mainArray[i + 1];
        }else{

          if(lastOp == 1){
            sum += currentCombine;
            currentCombine = 0;
          }else{
            sum -= currentCombine;
            currentCombine = 0;
          }

          lastOp = 2;
          currentCombine = mainArray[i + 1];
        }
      }
      
      if(lastOp == 1){
        sum += currentCombine;
      }else{
        sum -= currentCombine;
      }
      

      if(sum == 0){
        solutions.add(array);
      }
    }
  }

}